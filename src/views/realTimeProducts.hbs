<h1>Real-Time Product List</h1>
<ul id="realTimeProductList">
    {{#each products}}
    <li>{{this.title}} - {{this.description}}</li>
    {{/each}}
</ul>

<form id="productForm">

    <label for="title">nombre del producto:</label>
    <input type="text" id="title" name="title" required>
    <label for="description">descripcion de producto:</label>
    <input type="text" id="description" name="description" required>
    <label for="price">price:</label>
    <input type="number" id="price" name="price" required>
    <label for="thumbnail">thumbnail:</label>
    <input type="text" id="thumbnail" name="thumbnail" required>
    <label for="code">code:</label>
    <input type="number" id="code" name="code" required>
    <label for="stock">stock:</label>
    <input type="number" id="stock" name="stock" required>

    <button type="button" onclick="createProduct()">Add Product</button>
</form>

<script src="https://cdn.socket.io/4.0.0/socket.io.min.js"></script>
<script>
    const socket = io();

    socket.on('updateProductList', (products) => {
        const productList = document.getElementById('realTimeProductList');
        productList.innerHTML = products.map(product => `<li>${product.title} - ${product.description}</li>`).join('');
    });

    function createProduct() {

        const title = document.getElementById('title').value;
        const description = document.getElementById('description').value;
        const price = document.getElementById('price').value;
        const thumbnail = document.getElementById('thumbnail').value;
        const code = document.getElementById('code').value;
        const stock = document.getElementById('stock').value;


        socket.emit('createProduct', { title, description, price, thumbnail, code, stock });
    }
</script>